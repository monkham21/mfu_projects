package oopFinal;

//Abstract class for Movie
abstract class Movie {
 protected String title;
 protected double price;

 public Movie(String title, double price) {
     this.title = title;
     this.price = price;
 }

 public abstract double calculateTotalPrice(int quantity);

 public String getTitle() {
     return title;
 }
}

//Concrete class for Regular movie
class RegularMovie extends Movie {
 private double seatPrice = 150;

 public RegularMovie(String title) {
     super(title, 0);
 }

 @Override
 public double calculateTotalPrice(int quantity) {
     return seatPrice * quantity;
 }
}


//Interface for Ticket
interface Ticket {
 void displayTicketDetails();
}

//Concrete class for Ticket
class MovieTicket implements Ticket {
 private Movie movie;
 private int quantity;
 private int card;

 public MovieTicket(Movie movie, int quantity, int card) {
     this.movie = movie;
     this.quantity = quantity;
     this.card = card;
 }

 @Override
 public void displayTicketDetails() {
	 double totalPrice = movie.calculateTotalPrice(quantity);
     System.out.println("Movie: " + movie.getTitle());
     System.out.println("Quantity: " + quantity);
     System.out.println("Total Price: $" + totalPrice );
     if (card == 1) {
    	 GoldMemberCard gold = new GoldMemberCard(); 
    	 System.out.println("Discounted Price: $"+ gold.applyDiscount(totalPrice));
     } else if (card == 2) {
    	 SilverMemberCard silver = new SilverMemberCard();
    	 System.out.println("Discounted Price: $"+silver.applyDiscount(totalPrice));
     } else if (card == 3) {
    	 DiamondMemberCard diamond = new DiamondMemberCard();
    	 System.out.println("Discounted Price: $"+ diamond.applyDiscount(totalPrice));
     } 
     
 }
}

//Abstract class for Member Card
abstract class MemberCard {
 protected String type;
 protected double discount;

 public MemberCard(String type, double discount) {
     this.type = type;
     this.discount = discount;
 }

 public abstract double applyDiscount(double totalPrice);
}

//Concrete class for Gold Member Card
class GoldMemberCard extends MemberCard {
 public GoldMemberCard() {
     super("Gold", 0.05);
 }

 @Override
 public double applyDiscount(double totalPrice) {
     return totalPrice - (totalPrice * discount);
 }
}

//Concrete class for Silver Member Card
class SilverMemberCard extends MemberCard {
 public SilverMemberCard() {
     super("Silver", 0.1);
 }

 @Override
 public double applyDiscount(double totalPrice) {
     return totalPrice - (totalPrice * discount);
 }
}

//Concrete class for Diamond Member Card
class DiamondMemberCard extends MemberCard {
 public DiamondMemberCard() {
     super("Diamond", 0.15);
 }

 @Override
 public double applyDiscount(double totalPrice) {
     return totalPrice - (totalPrice * discount);
 }
}



